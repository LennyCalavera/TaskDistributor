<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Support\Facades\DB;
use Illuminate\Support\Facades\Schema;

class FillStartTaskData extends Migration
{
    /**
     * Run the migrations.
     *
     * @return void
     */
    public function up()
    {
        if (Schema::hasTable('tasks')) {
            DB::table('tasks')->insert(
                [
                    [
                        'text' => 'Создайте на локальном сервере Xampp в папке htdocs тестовую папку test, а в ней файл index.php. Для быстрого доступа к файлу создайте в браузере закладку, поскольку файл будет использоваться в дальнейшем для решения задач. Адресный путь к файлу должен иметь вид http://localhost/test/index.php.',
                        'type' => 1
                    ],
                    [
                        'text' => 'Выведите на экран одна за другой четыре строки: "Всем ", "привет ", "от ", "PHP!<br><br>", используя для этого только один оператор echo. После данной инструкции напишите два однострочных комментария: "Для вывода слов на разных строках мы используем элемент "br", т.е разрыв строки" и "Переменные выводимые оператором echo перечисляются через запятую". Далее измените код первой части так, чтобы слова после вывода на экран находились на разных строках. В самом конце нашего кода напишите многострочный комментарий: "После каждой инструкции мы будем ставить точку с запятой, даже если инструкция является последней в блоке php-кода."',
                        'type' => 1
                    ],
                    [
                        'text' => 'Создайте переменную, присвойте ей число 5 и выведите его на экран. Создайте вторую переменную, присвойте ей число 10 и выведите его на экран. Выведите на экран сумму, разность, произведение и частное от деления значения первой переменной на значение второй переменной. Присвойте сумму значений этих двух переменных третьей и выведите итог на экран. Теперь увеличьте текущее значение третьей переменной на величину значения второй переменной и выведите его на экран. И, наконец, увеличьте текущее значение третьей переменной в два раза и выведите его на экран.',
                        'type' => 1
                    ],
                    [
                        'text' => 'Создайте функцию match_letter(), которая будет в качестве первого аргумента принимать строку $str и проверять ее на соответствие допустимым символам массива $alphabet, который будет передаваться в качестве второго аргумента. Результат проверки функция должна выводить на экран. Проверьте с помощью этой функции на наличие запрещенных символов строки "s-1", "S_20" и "3_S", если в качестве массива допустимых символов передается массив ["s","_","1","2","3"]. Для решения задачи используйте внешний цикл for по всем символам строки (длину строки можно узнать при помощи mb_strlen()), а также внутренний цикл for по всем элементам массива (число элементов массива можно узнать при помощи count()). Во внутреннем цикле следует сравнивать текущий символ строки со всеми символами массива, чтобы установить его допустимость. Если вы не смогли решить задачу, обязательно разберите код решения, заглядывая в официальный справочник, и наберите код самостоятельно!!!',
                        'type' => 2
                    ],
                    [
                        'text' => 'Создайте три переменные и присвойте им строки: "Добро ", "побеждает ", "зло". Создайте еще одну переменную и присвойте ей объединенную строку (для конкатенации строковых переменных используйте обычную точку). Выведите ее на экран.',
                        'type' => 2
                    ],
                    [
                        'text' => 'Создайте переменную и присвойте ей строку "На манёврах "красные" выступали против "синих"", предварительно экранировав двойные кавычки внутри двойных во избежание ошибки. Выведите строку на экран. Как еще можно поступить для вывода строк, содержащих внутри себя двойные или одинарные кавычки, чтобы не использовать их экранирование?',
                        'type' => 2
                    ],
                    [
                        'text' => 'На вход подается строка целых чисел, разделенных пробелами. Нужно найти последовательность подряд идущих чисел, у которой сумма элементов будет максимальной. Например, для строки "-2 1 -3 4 -1 2 1 -5 4" решением будет последовательность "4 -1 2 1" с максимальной суммой элементов равной "6". Вывести нужно максимальную сумму подряд идущих элементов. Нужно учитывать, что последовательность может представлять собой лишь одно число (смотрите пример с отрицательными числами).',
                        'type' => 3
                    ],
                    [
                        'text' => 'На вход подается строка целых уникальных (не повторяющихся) чисел, разделенных пробелами (elements). Следующая строка содержит число элементов в комбинации (k). 1 ≤ k ≤ количество elements. Найдите все возможные комбинации заданной длины. Выведите их в любом порядке.',
                        'type' => 3
                    ],
                    [
                        'text' => 'На вход подается строка целых чисел, разделенных пробелами. Найдите наибольшее возможное число, составленное путём конкатенации этих чисел друг к другу.',
                        'type' => 3
                    ],
                    [
                        'text' => 'Напишите функцию, которая позволит найти периметр прямоугольника, зная его ширину и длину.',
                        'type' => 4
                    ],
                    [
                        'text' => 'Напишите сценарий PHP для преобразования числа, представленного в научной нотации, в int и float. Пример научного обозначения: 2.5e-1',
                        'type' => 4
                    ],
                    [
                        'text' => 'Напишите функцию PHP для округления числа с плавающей запятой от нуля до указанного числа десятичных знаков.',
                        'type' => 4
                    ],
                    [
                        'text' => 'Создайте переменные, присвоив им логические значения true и false, вещественное число 43.658+e2, но предварительно записав его в обычном виде, и корень квадратный из отрицательного числа, например, sqrt(-2). Выведите значения всех переменных на экран.',
                        'type' => 5
                    ],
                    [
                        'text' => 'У вас есть парк из 50 грузовиков. Каждый из них полностью заправлен и может проехать 100 км. Как далеко с их помощью вы можете доставить определенный груз? Что будет, если в вашем распоряжении N грузовиков?',
                        'type' => 5
                    ],
                    [
                        'text' => 'Опишите алгоритм для нахождения миллиона наименьших чисел в наборе из миллиарда чисел. Память компьютера позволяет хранить весь миллиард чисел. Если придумали какое-либо решение, то оцените его эффективность по времени. Есть ли более эффективное решение?',
                        'type' => 5
                    ],
                    [
                        'text' => 'Создайте переменные, присвоив им логические значения true и false, вещественное число 43.658+e2, но предварительно записав его в обычном виде, и корень квадратный из отрицательного числа, например, sqrt(-2). Выведите значения всех переменных на экран.',
                        'type' => 6
                    ],
                    [
                        'text' => 'Есть однонаправленный список из структур. В нём random указывает на какой-то еще элемент этого же списка. Требуется написать функцию, которая копирует этот список с сохранением структуры (т.е. если в старом списке random первой ноды указывал на 4-ю, в новом списке должно быть то же самое – рандом первой ноды указывает на 4-ю ноду нового списка). O(n), константная дополнительная память + память под элементы нового списка. Нельзя сразу выделить память под все данные одник куском т.е. список должен быть честным, разбросанным по частям, а не единым блоком, как массив.',
                        'type' => 6
                    ],
                    [
                        'text' => 'Каковы будут результаты сравнения в условии задачи? Проверьте свои ответы посредством вывода результатов на экран. Не забывайте, что результатом сравнения выражений является одно из логических значений true или false. Соответственно, при выводе оператор echo преобразует их либо в строку "1", либо в пустую строку',
                        'type' => 6
                    ],
                    [
                        'text' => 'Создайте пользовательскую функцию, которая принимает два аргумента, а возвращает их произведение. Вызовите функцию, передав ей в качестве аргументов два числа и выведите на экран результат',
                        'type' => 7
                    ],
                    [
                        'text' => 'Создайте две переменные и присвойте им числовые значения. Теперь создайте пользовательскую функцию, принимающую два аргумента со значеними по умолчанию и выводящую произведение своих аргументов. Вызовите функцию, передав ей сперва в качестве аргументов значения переменных, затем значение только одной из переменных и, наконец, вообще без аргументов. Объясните полученные результаты.',
                        'type' => 7
                    ],
                    [
                        'text' => 'Создайте пользовательскую функцию, принимающую аргументы в массив переменной длины и выводящую их затем на экран. Используйте для доступа к элементам массива цикл foreach. Вызовите функцию, передав ей в качестве значения две строки и число.',
                        'type' => 7
                    ],
                ]
            );
        }
    }

    /**
     * Reverse the migrations.
     *
     * @return void
     */
    public function down()
    {
        if (Schema::hasTable('tasks')) {
            DB::table('tasks')->truncate();
        }
    }
}
